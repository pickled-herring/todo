#!/bin/sh

# a small todo script
set -e
DIR=$HOME/todo
if [ ! -f $DIR ]; then
		echo "todo missing, creating $DIR"
		touch $DIR
fi

# Formatting
GREY="\033[37m"
EXIT="\033[0m"

# Ops
_sort_(){
	echo "$(cat $DIR | sort)" > $DIR
}

_list_(){
	_sort_
	printf %b"You have "%s" things to do:"%b"\n" \
		$GREY $(cat $DIR | grep -c 'a |') $EXIT
	cat -n $DIR | grep -v '^$' | grep 'a |' |\
		awk -F "|" '{system("\
		days=$(($(($(date -d "$3" \"+%s\") - $(date \"+%s\"))) / 86400));\
		blue=\"\\033[94m\";\
		green=\"\\033[32m\";\
		exit=\"\\033[0m\";\
		printf %b%s%b%s%b\" (\"%s\" days left)\\n\"%b $blue \""$1"\" $exit \""$4"\" $green $days $exit;\
	")}'
}

_done_(){
	cat $DIR | grep 'z |' | awk -F "|" '{print $4" was due"$3}'
}

_del_(){
	sed -i "$1 s/| a |/| z |/" $DIR
}

_add_(){
	date -d "$2" >> /dev/null
	echo "| a | $(date -d "$2" "+%F") | $1" >> $DIR
}

_push_(){
	date -d "$2" >> /dev/null
	sed -i "$1 s/| [0-9]*-[0-9]*-[0-9]* |/| $(date -d "$2" "+%F") |/" $DIR
}

_edit_(){
	sed -i "$1 s/| [^|]*$/| $2/" $DIR
}

# Usage
_usage_(){
BOLD="\033[1m"
echo -e "$BOLD Usage: $EXIT"
echo -e "	$BOLD $(basename "$0") $EXIT"
echo -e "	$BOLD $(basename "$0") -a|--add <item todo> <date>$EXIT"
echo -e "	$BOLD $(basename "$0") -d|--done <index>$EXIT"
echo -e "	$BOLD $(basename "$0") -p|--push <index> <date>$EXIT"
echo -e "	$BOLD $(basename "$0") -e|--edit <index> <message>$EXIT\n"

echo -e "$BOLD Description: $EXIT"

	cat <<EOF
	A simple todo script for all of your scheduling needs
EOF

echo -e "$BOLD Examples: $EXIT"

	cat <<EOF
	todo
	todo -a "Compsci Homework" "Sep 6"
	todo --add "Call mom" "next week"

	# To get a list of what indexes to use, just run todo. The indexes
	# are in blue
	todo
	todo -d 2
	todo -p 3 "Jul 30 2020"
	todo -e 1 "This needed changing"
EOF

echo -e "$BOLD Options: $EXIT"
	cat <<EOF
    -a|--add <item> <date>    Adds an item to the todo list, if no date is
                              listed the item will have the due date of
                              "today"
    -d|--done <index>         Marks the item as done
    -p|--push <index> <date>  Change the item's due date
    -e|--edit <index> <date>  Change the message of the item
    -f                        Show items marked as done
EOF
}

# Input
if [ "$#" -eq "0" ]; then
		_list_;
		exit 0;
fi

case $1 in
		"-f") _done_;;
		"-d"|"--done") _del_ "$2";;
		"-a"|"--add") _add_ "$2" "$3";; # --add message date
		"-p"|"--push") _push_ "$2" "$3";;# --push index date
		"-e"|"--edit") _edit_ "$2" "$3";; # --edit index message
		"-h"|"--help") _usage_;;
		*) _usage_;;
esac
